==========================================
real base lr:  0.1
==========================================
[32m[2023-07-06 14:33:21 RepVGG-A0][33m(main.py 419)[39m: INFO Full config saved to /your/path/to/save/dir/RepVGG-A0/train_from_scratch/config.json
[32m[2023-07-06 14:33:21 RepVGG-A0][33m(main.py 422)[39m: INFO AMP_OPT_LEVEL: O0
AUG:
  AUTO_AUGMENT: rand-m9-mstd0.5-inc1
  COLOR_JITTER: 0.4
  CUTMIX: 0.0
  CUTMIX_MINMAX: null
  MIXUP: 0.0
  MIXUP_MODE: batch
  MIXUP_PROB: 1.0
  MIXUP_SWITCH_PROB: 0.5
  PRESET: weak
  RECOUNT: 1
  REMODE: pixel
  REPROB: 0.25
BASE:
- ''
DATA:
  BATCH_SIZE: 32
  CACHE_MODE: part
  DATASET: imagenet
  DATA_PATH: /workspace/imagenet/
  IMG_SIZE: 224
  INTERPOLATION: bilinear
  NUM_WORKERS: 8
  PIN_MEMORY: true
  TEST_BATCH_SIZE: 32
  TEST_SIZE: 224
  ZIP_MODE: false
EVAL_MODE: false
LOCAL_RANK: 0
MODEL:
  ARCH: RepVGG-A0
  LABEL_SMOOTHING: 0.1
  NUM_CLASSES: 1000
  RESUME: ''
OUTPUT: /your/path/to/save/dir/RepVGG-A0/train_from_scratch
PRINT_FREQ: 10
SAVE_FREQ: 20
SEED: 0
TAG: train_from_scratch
TEST:
  CROP: false
THROUGHPUT_MODE: false
TRAIN:
  ACCUMULATION_STEPS: 0
  AUTO_RESUME: true
  BASE_LR: 0.1
  CLIP_GRAD: 0.0
  EMA_ALPHA: 0.0
  EMA_UPDATE_PERIOD: 8
  EPOCHS: 300
  LR_SCHEDULER:
    DECAY_EPOCHS: 30
    DECAY_RATE: 0.1
    NAME: cosine
  MIN_LR: 0.0
  OPTIMIZER:
    BETAS:
    - 0.9
    - 0.999
    EPS: 1.0e-08
    MOMENTUM: 0.9
    NAME: sgd
  SCALES_PATH: null
  START_EPOCH: 0
  USE_CHECKPOINT: false
  WARMUP_EPOCHS: 5
  WARMUP_LR: 0.0
  WEIGHT_DECAY: 0.0001
Compose(
    RandomResizedCrop(size=(224, 224), scale=(0.08, 1.0), ratio=(0.75, 1.3333), interpolation=bilinear), antialias=None)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
use raw ImageNet data
local rank 0 / global rank 0 successfully build train dataset
use raw ImageNet data
local rank 0 / global rank 0 successfully build val dataset
[32m[2023-07-06 14:33:25 RepVGG-A0][33m(main.py 84)[39m: INFO Creating model:RepVGG-A0
=================== Building the vanila RepVGG ===================
RepVGG Block, identity =  None
RepVGG Block, identity =  None
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  None
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  None
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  Identity()
RepVGG Block, identity =  None
stage0.rbr_dense.conv.weight USE weight decay
stage0.rbr_dense.bn.weight has no weight decay
stage0.rbr_dense.bn.bias has no weight decay
stage0.rbr_1x1.conv.weight USE weight decay
stage0.rbr_whbn.weight has no weight decay
stage0.rbr_whbn.bias has no weight decay
stage1.0.rbr_dense.conv.weight USE weight decay
stage1.0.rbr_dense.bn.weight has no weight decay
stage1.0.rbr_dense.bn.bias has no weight decay
stage1.0.rbr_1x1.conv.weight USE weight decay
stage1.0.rbr_whbn.weight has no weight decay
stage1.0.rbr_whbn.bias has no weight decay
stage1.1.rbr_dense.conv.weight USE weight decay
stage1.1.rbr_dense.bn.weight has no weight decay
stage1.1.rbr_dense.bn.bias has no weight decay
stage1.1.rbr_1x1.conv.weight USE weight decay
stage1.1.rbr_whbn.weight has no weight decay
stage1.1.rbr_whbn.bias has no weight decay
stage2.0.rbr_dense.conv.weight USE weight decay
stage2.0.rbr_dense.bn.weight has no weight decay
stage2.0.rbr_dense.bn.bias has no weight decay
stage2.0.rbr_1x1.conv.weight USE weight decay
stage2.0.rbr_whbn.weight has no weight decay
stage2.0.rbr_whbn.bias has no weight decay
stage2.1.rbr_dense.conv.weight USE weight decay
stage2.1.rbr_dense.bn.weight has no weight decay
stage2.1.rbr_dense.bn.bias has no weight decay
stage2.1.rbr_1x1.conv.weight USE weight decay
stage2.1.rbr_whbn.weight has no weight decay
stage2.1.rbr_whbn.bias has no weight decay
stage2.2.rbr_dense.conv.weight USE weight decay
stage2.2.rbr_dense.bn.weight has no weight decay
stage2.2.rbr_dense.bn.bias has no weight decay
stage2.2.rbr_1x1.conv.weight USE weight decay
stage2.2.rbr_whbn.weight has no weight decay
stage2.2.rbr_whbn.bias has no weight decay
stage2.3.rbr_dense.conv.weight USE weight decay
stage2.3.rbr_dense.bn.weight has no weight decay
stage2.3.rbr_dense.bn.bias has no weight decay
stage2.3.rbr_1x1.conv.weight USE weight decay
stage2.3.rbr_whbn.weight has no weight decay
stage2.3.rbr_whbn.bias has no weight decay
stage3.0.rbr_dense.conv.weight USE weight decay
stage3.0.rbr_dense.bn.weight has no weight decay
stage3.0.rbr_dense.bn.bias has no weight decay
stage3.0.rbr_1x1.conv.weight USE weight decay
stage3.0.rbr_whbn.weight has no weight decay
stage3.0.rbr_whbn.bias has no weight decay
stage3.1.rbr_dense.conv.weight USE weight decay
stage3.1.rbr_dense.bn.weight has no weight decay
stage3.1.rbr_dense.bn.bias has no weight decay
stage3.1.rbr_1x1.conv.weight USE weight decay
stage3.1.rbr_whbn.weight has no weight decay
stage3.1.rbr_whbn.bias has no weight decay
stage3.2.rbr_dense.conv.weight USE weight decay
stage3.2.rbr_dense.bn.weight has no weight decay
stage3.2.rbr_dense.bn.bias has no weight decay
stage3.2.rbr_1x1.conv.weight USE weight decay
stage3.2.rbr_whbn.weight has no weight decay
stage3.2.rbr_whbn.bias has no weight decay
stage3.3.rbr_dense.conv.weight USE weight decay
stage3.3.rbr_dense.bn.weight has no weight decay
stage3.3.rbr_dense.bn.bias has no weight decay
stage3.3.rbr_1x1.conv.weight USE weight decay
stage3.3.rbr_whbn.weight has no weight decay
stage3.3.rbr_whbn.bias has no weight decay
stage3.4.rbr_dense.conv.weight USE weight decay
stage3.4.rbr_dense.bn.weight has no weight decay
stage3.4.rbr_dense.bn.bias has no weight decay
stage3.4.rbr_1x1.conv.weight USE weight decay
stage3.4.rbr_whbn.weight has no weight decay
stage3.4.rbr_whbn.bias has no weight decay
stage3.5.rbr_dense.conv.weight USE weight decay
stage3.5.rbr_dense.bn.weight has no weight decay
stage3.5.rbr_dense.bn.bias has no weight decay
stage3.5.rbr_1x1.conv.weight USE weight decay
stage3.5.rbr_whbn.weight has no weight decay
stage3.5.rbr_whbn.bias has no weight decay
stage3.6.rbr_dense.conv.weight USE weight decay
stage3.6.rbr_dense.bn.weight has no weight decay
stage3.6.rbr_dense.bn.bias has no weight decay
stage3.6.rbr_1x1.conv.weight USE weight decay
stage3.6.rbr_whbn.weight has no weight decay
stage3.6.rbr_whbn.bias has no weight decay
stage3.7.rbr_dense.conv.weight USE weight decay
stage3.7.rbr_dense.bn.weight has no weight decay
stage3.7.rbr_dense.bn.bias has no weight decay
stage3.7.rbr_1x1.conv.weight USE weight decay
stage3.7.rbr_whbn.weight has no weight decay
stage3.7.rbr_whbn.bias has no weight decay
stage3.8.rbr_dense.conv.weight USE weight decay
stage3.8.rbr_dense.bn.weight has no weight decay
stage3.8.rbr_dense.bn.bias has no weight decay
stage3.8.rbr_1x1.conv.weight USE weight decay
stage3.8.rbr_whbn.weight has no weight decay
stage3.8.rbr_whbn.bias has no weight decay
stage3.9.rbr_dense.conv.weight USE weight decay
stage3.9.rbr_dense.bn.weight has no weight decay
stage3.9.rbr_dense.bn.bias has no weight decay
stage3.9.rbr_1x1.conv.weight USE weight decay
stage3.9.rbr_whbn.weight has no weight decay
stage3.9.rbr_whbn.bias has no weight decay
stage3.10.rbr_dense.conv.weight USE weight decay
stage3.10.rbr_dense.bn.weight has no weight decay
stage3.10.rbr_dense.bn.bias has no weight decay
stage3.10.rbr_1x1.conv.weight USE weight decay
stage3.10.rbr_whbn.weight has no weight decay
stage3.10.rbr_whbn.bias has no weight decay
stage3.11.rbr_dense.conv.weight USE weight decay
stage3.11.rbr_dense.bn.weight has no weight decay
stage3.11.rbr_dense.bn.bias has no weight decay
stage3.11.rbr_1x1.conv.weight USE weight decay
stage3.11.rbr_whbn.weight has no weight decay
stage3.11.rbr_whbn.bias has no weight decay
stage3.12.rbr_dense.conv.weight USE weight decay
stage3.12.rbr_dense.bn.weight has no weight decay
stage3.12.rbr_dense.bn.bias has no weight decay
stage3.12.rbr_1x1.conv.weight USE weight decay
stage3.12.rbr_whbn.weight has no weight decay
stage3.12.rbr_whbn.bias has no weight decay
stage3.13.rbr_dense.conv.weight USE weight decay
stage3.13.rbr_dense.bn.weight has no weight decay
stage3.13.rbr_dense.bn.bias has no weight decay
stage3.13.rbr_1x1.conv.weight USE weight decay
stage3.13.rbr_whbn.weight has no weight decay
stage3.13.rbr_whbn.bias has no weight decay
stage4.0.rbr_dense.conv.weight USE weight decay
stage4.0.rbr_dense.bn.weight has no weight decay
stage4.0.rbr_dense.bn.bias has no weight decay
stage4.0.rbr_1x1.conv.weight USE weight decay
stage4.0.rbr_whbn.weight has no weight decay
stage4.0.rbr_whbn.bias has no weight decay
linear.weight USE weight decay
linear.bias has no weight decay
================================== SGD nest, momentum = 0.9, wd = 0.0001
[32m[2023-07-06 14:33:25 RepVGG-A0][33m(main.py 89)[39m: INFO RepVGG(
  (stage0): RepVGGBlock(
    (nonlinearity): ReLU()
    (se): Identity()
    (rbr_dense): Sequential(
      (conv): Conv2d(3, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (rbr_1x1): Sequential(
      (conv): Conv2d(3, 48, kernel_size=(1, 1), stride=(2, 2), bias=False)
    )
    (rbr_whbn): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (stage1): ModuleList(
    (0): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(48, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(48, 48, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (rbr_whbn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (stage2): ModuleList(
    (0): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(48, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(48, 96, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (rbr_whbn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (3): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (stage3): ModuleList(
    (0): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(96, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(96, 192, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (rbr_whbn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (3): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (4): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (5): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (6): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (7): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (8): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (9): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (10): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (11): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (12): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (13): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_identity): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (stage4): ModuleList(
    (0): RepVGGBlock(
      (nonlinearity): ReLU()
      (se): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(192, 1280, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(192, 1280, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (rbr_whbn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (gap): AdaptiveAvgPool2d(output_size=1)
  (linear): Linear(in_features=1280, out_features=1000, bias=True)
)
[32m[2023-07-06 14:33:25 RepVGG-A0][33m(main.py 106)[39m: INFO number of params: 9100750
All checkpoints founded in /your/path/to/save/dir/RepVGG-A0/train_from_scratch: ['best_ckpt.pth', 'ckpt_epoch_40.pth', 'ckpt_epoch_0.pth', 'latest.pth', 'ckpt_epoch_20.pth']
The latest checkpoint founded: /your/path/to/save/dir/RepVGG-A0/train_from_scratch/latest.pth
[32m[2023-07-06 14:33:25 RepVGG-A0][33m(main.py 147)[39m: INFO auto resuming from /your/path/to/save/dir/RepVGG-A0/train_from_scratch/latest.pth
[32m[2023-07-06 14:33:25 RepVGG-A0][33m(utils.py 123)[39m: INFO ==============> Resuming form /your/path/to/save/dir/RepVGG-A0/train_from_scratch/latest.pth....................
[32m[2023-07-06 14:33:26 RepVGG-A0][33m(utils.py 130)[39m: INFO _IncompatibleKeys(missing_keys=['stage0.rbr_whbn.weight', 'stage0.rbr_whbn.bias', 'stage0.rbr_whbn.running_mean', 'stage0.rbr_whbn.running_var', 'stage1.0.rbr_whbn.weight', 'stage1.0.rbr_whbn.bias', 'stage1.0.rbr_whbn.running_mean', 'stage1.0.rbr_whbn.running_var', 'stage1.1.rbr_whbn.weight', 'stage1.1.rbr_whbn.bias', 'stage1.1.rbr_whbn.running_mean', 'stage1.1.rbr_whbn.running_var', 'stage2.0.rbr_whbn.weight', 'stage2.0.rbr_whbn.bias', 'stage2.0.rbr_whbn.running_mean', 'stage2.0.rbr_whbn.running_var', 'stage2.1.rbr_whbn.weight', 'stage2.1.rbr_whbn.bias', 'stage2.1.rbr_whbn.running_mean', 'stage2.1.rbr_whbn.running_var', 'stage2.2.rbr_whbn.weight', 'stage2.2.rbr_whbn.bias', 'stage2.2.rbr_whbn.running_mean', 'stage2.2.rbr_whbn.running_var', 'stage2.3.rbr_whbn.weight', 'stage2.3.rbr_whbn.bias', 'stage2.3.rbr_whbn.running_mean', 'stage2.3.rbr_whbn.running_var', 'stage3.0.rbr_whbn.weight', 'stage3.0.rbr_whbn.bias', 'stage3.0.rbr_whbn.running_mean', 'stage3.0.rbr_whbn.running_var', 'stage3.1.rbr_whbn.weight', 'stage3.1.rbr_whbn.bias', 'stage3.1.rbr_whbn.running_mean', 'stage3.1.rbr_whbn.running_var', 'stage3.2.rbr_whbn.weight', 'stage3.2.rbr_whbn.bias', 'stage3.2.rbr_whbn.running_mean', 'stage3.2.rbr_whbn.running_var', 'stage3.3.rbr_whbn.weight', 'stage3.3.rbr_whbn.bias', 'stage3.3.rbr_whbn.running_mean', 'stage3.3.rbr_whbn.running_var', 'stage3.4.rbr_whbn.weight', 'stage3.4.rbr_whbn.bias', 'stage3.4.rbr_whbn.running_mean', 'stage3.4.rbr_whbn.running_var', 'stage3.5.rbr_whbn.weight', 'stage3.5.rbr_whbn.bias', 'stage3.5.rbr_whbn.running_mean', 'stage3.5.rbr_whbn.running_var', 'stage3.6.rbr_whbn.weight', 'stage3.6.rbr_whbn.bias', 'stage3.6.rbr_whbn.running_mean', 'stage3.6.rbr_whbn.running_var', 'stage3.7.rbr_whbn.weight', 'stage3.7.rbr_whbn.bias', 'stage3.7.rbr_whbn.running_mean', 'stage3.7.rbr_whbn.running_var', 'stage3.8.rbr_whbn.weight', 'stage3.8.rbr_whbn.bias', 'stage3.8.rbr_whbn.running_mean', 'stage3.8.rbr_whbn.running_var', 'stage3.9.rbr_whbn.weight', 'stage3.9.rbr_whbn.bias', 'stage3.9.rbr_whbn.running_mean', 'stage3.9.rbr_whbn.running_var', 'stage3.10.rbr_whbn.weight', 'stage3.10.rbr_whbn.bias', 'stage3.10.rbr_whbn.running_mean', 'stage3.10.rbr_whbn.running_var', 'stage3.11.rbr_whbn.weight', 'stage3.11.rbr_whbn.bias', 'stage3.11.rbr_whbn.running_mean', 'stage3.11.rbr_whbn.running_var', 'stage3.12.rbr_whbn.weight', 'stage3.12.rbr_whbn.bias', 'stage3.12.rbr_whbn.running_mean', 'stage3.12.rbr_whbn.running_var', 'stage3.13.rbr_whbn.weight', 'stage3.13.rbr_whbn.bias', 'stage3.13.rbr_whbn.running_mean', 'stage3.13.rbr_whbn.running_var', 'stage4.0.rbr_whbn.weight', 'stage4.0.rbr_whbn.bias', 'stage4.0.rbr_whbn.running_mean', 'stage4.0.rbr_whbn.running_var'], unexpected_keys=['stage0.rbr_1x1.bn.weight', 'stage0.rbr_1x1.bn.bias', 'stage0.rbr_1x1.bn.running_mean', 'stage0.rbr_1x1.bn.running_var', 'stage0.rbr_1x1.bn.num_batches_tracked', 'stage1.0.rbr_1x1.bn.weight', 'stage1.0.rbr_1x1.bn.bias', 'stage1.0.rbr_1x1.bn.running_mean', 'stage1.0.rbr_1x1.bn.running_var', 'stage1.0.rbr_1x1.bn.num_batches_tracked', 'stage1.1.rbr_identity.weight', 'stage1.1.rbr_identity.bias', 'stage1.1.rbr_identity.running_mean', 'stage1.1.rbr_identity.running_var', 'stage1.1.rbr_identity.num_batches_tracked', 'stage1.1.rbr_1x1.bn.weight', 'stage1.1.rbr_1x1.bn.bias', 'stage1.1.rbr_1x1.bn.running_mean', 'stage1.1.rbr_1x1.bn.running_var', 'stage1.1.rbr_1x1.bn.num_batches_tracked', 'stage2.0.rbr_1x1.bn.weight', 'stage2.0.rbr_1x1.bn.bias', 'stage2.0.rbr_1x1.bn.running_mean', 'stage2.0.rbr_1x1.bn.running_var', 'stage2.0.rbr_1x1.bn.num_batches_tracked', 'stage2.1.rbr_identity.weight', 'stage2.1.rbr_identity.bias', 'stage2.1.rbr_identity.running_mean', 'stage2.1.rbr_identity.running_var', 'stage2.1.rbr_identity.num_batches_tracked', 'stage2.1.rbr_1x1.bn.weight', 'stage2.1.rbr_1x1.bn.bias', 'stage2.1.rbr_1x1.bn.running_mean', 'stage2.1.rbr_1x1.bn.running_var', 'stage2.1.rbr_1x1.bn.num_batches_tracked', 'stage2.2.rbr_identity.weight', 'stage2.2.rbr_identity.bias', 'stage2.2.rbr_identity.running_mean', 'stage2.2.rbr_identity.running_var', 'stage2.2.rbr_identity.num_batches_tracked', 'stage2.2.rbr_1x1.bn.weight', 'stage2.2.rbr_1x1.bn.bias', 'stage2.2.rbr_1x1.bn.running_mean', 'stage2.2.rbr_1x1.bn.running_var', 'stage2.2.rbr_1x1.bn.num_batches_tracked', 'stage2.3.rbr_identity.weight', 'stage2.3.rbr_identity.bias', 'stage2.3.rbr_identity.running_mean', 'stage2.3.rbr_identity.running_var', 'stage2.3.rbr_identity.num_batches_tracked', 'stage2.3.rbr_1x1.bn.weight', 'stage2.3.rbr_1x1.bn.bias', 'stage2.3.rbr_1x1.bn.running_mean', 'stage2.3.rbr_1x1.bn.running_var', 'stage2.3.rbr_1x1.bn.num_batches_tracked', 'stage3.0.rbr_1x1.bn.weight', 'stage3.0.rbr_1x1.bn.bias', 'stage3.0.rbr_1x1.bn.running_mean', 'stage3.0.rbr_1x1.bn.running_var', 'stage3.0.rbr_1x1.bn.num_batches_tracked', 'stage3.1.rbr_identity.weight', 'stage3.1.rbr_identity.bias', 'stage3.1.rbr_identity.running_mean', 'stage3.1.rbr_identity.running_var', 'stage3.1.rbr_identity.num_batches_tracked', 'stage3.1.rbr_1x1.bn.weight', 'stage3.1.rbr_1x1.bn.bias', 'stage3.1.rbr_1x1.bn.running_mean', 'stage3.1.rbr_1x1.bn.running_var', 'stage3.1.rbr_1x1.bn.num_batches_tracked', 'stage3.2.rbr_identity.weight', 'stage3.2.rbr_identity.bias', 'stage3.2.rbr_identity.running_mean', 'stage3.2.rbr_identity.running_var', 'stage3.2.rbr_identity.num_batches_tracked', 'stage3.2.rbr_1x1.bn.weight', 'stage3.2.rbr_1x1.bn.bias', 'stage3.2.rbr_1x1.bn.running_mean', 'stage3.2.rbr_1x1.bn.running_var', 'stage3.2.rbr_1x1.bn.num_batches_tracked', 'stage3.3.rbr_identity.weight', 'stage3.3.rbr_identity.bias', 'stage3.3.rbr_identity.running_mean', 'stage3.3.rbr_identity.running_var', 'stage3.3.rbr_identity.num_batches_tracked', 'stage3.3.rbr_1x1.bn.weight', 'stage3.3.rbr_1x1.bn.bias', 'stage3.3.rbr_1x1.bn.running_mean', 'stage3.3.rbr_1x1.bn.running_var', 'stage3.3.rbr_1x1.bn.num_batches_tracked', 'stage3.4.rbr_identity.weight', 'stage3.4.rbr_identity.bias', 'stage3.4.rbr_identity.running_mean', 'stage3.4.rbr_identity.running_var', 'stage3.4.rbr_identity.num_batches_tracked', 'stage3.4.rbr_1x1.bn.weight', 'stage3.4.rbr_1x1.bn.bias', 'stage3.4.rbr_1x1.bn.running_mean', 'stage3.4.rbr_1x1.bn.running_var', 'stage3.4.rbr_1x1.bn.num_batches_tracked', 'stage3.5.rbr_identity.weight', 'stage3.5.rbr_identity.bias', 'stage3.5.rbr_identity.running_mean', 'stage3.5.rbr_identity.running_var', 'stage3.5.rbr_identity.num_batches_tracked', 'stage3.5.rbr_1x1.bn.weight', 'stage3.5.rbr_1x1.bn.bias', 'stage3.5.rbr_1x1.bn.running_mean', 'stage3.5.rbr_1x1.bn.running_var', 'stage3.5.rbr_1x1.bn.num_batches_tracked', 'stage3.6.rbr_identity.weight', 'stage3.6.rbr_identity.bias', 'stage3.6.rbr_identity.running_mean', 'stage3.6.rbr_identity.running_var', 'stage3.6.rbr_identity.num_batches_tracked', 'stage3.6.rbr_1x1.bn.weight', 'stage3.6.rbr_1x1.bn.bias', 'stage3.6.rbr_1x1.bn.running_mean', 'stage3.6.rbr_1x1.bn.running_var', 'stage3.6.rbr_1x1.bn.num_batches_tracked', 'stage3.7.rbr_identity.weight', 'stage3.7.rbr_identity.bias', 'stage3.7.rbr_identity.running_mean', 'stage3.7.rbr_identity.running_var', 'stage3.7.rbr_identity.num_batches_tracked', 'stage3.7.rbr_1x1.bn.weight', 'stage3.7.rbr_1x1.bn.bias', 'stage3.7.rbr_1x1.bn.running_mean', 'stage3.7.rbr_1x1.bn.running_var', 'stage3.7.rbr_1x1.bn.num_batches_tracked', 'stage3.8.rbr_identity.weight', 'stage3.8.rbr_identity.bias', 'stage3.8.rbr_identity.running_mean', 'stage3.8.rbr_identity.running_var', 'stage3.8.rbr_identity.num_batches_tracked', 'stage3.8.rbr_1x1.bn.weight', 'stage3.8.rbr_1x1.bn.bias', 'stage3.8.rbr_1x1.bn.running_mean', 'stage3.8.rbr_1x1.bn.running_var', 'stage3.8.rbr_1x1.bn.num_batches_tracked', 'stage3.9.rbr_identity.weight', 'stage3.9.rbr_identity.bias', 'stage3.9.rbr_identity.running_mean', 'stage3.9.rbr_identity.running_var', 'stage3.9.rbr_identity.num_batches_tracked', 'stage3.9.rbr_1x1.bn.weight', 'stage3.9.rbr_1x1.bn.bias', 'stage3.9.rbr_1x1.bn.running_mean', 'stage3.9.rbr_1x1.bn.running_var', 'stage3.9.rbr_1x1.bn.num_batches_tracked', 'stage3.10.rbr_identity.weight', 'stage3.10.rbr_identity.bias', 'stage3.10.rbr_identity.running_mean', 'stage3.10.rbr_identity.running_var', 'stage3.10.rbr_identity.num_batches_tracked', 'stage3.10.rbr_1x1.bn.weight', 'stage3.10.rbr_1x1.bn.bias', 'stage3.10.rbr_1x1.bn.running_mean', 'stage3.10.rbr_1x1.bn.running_var', 'stage3.10.rbr_1x1.bn.num_batches_tracked', 'stage3.11.rbr_identity.weight', 'stage3.11.rbr_identity.bias', 'stage3.11.rbr_identity.running_mean', 'stage3.11.rbr_identity.running_var', 'stage3.11.rbr_identity.num_batches_tracked', 'stage3.11.rbr_1x1.bn.weight', 'stage3.11.rbr_1x1.bn.bias', 'stage3.11.rbr_1x1.bn.running_mean', 'stage3.11.rbr_1x1.bn.running_var', 'stage3.11.rbr_1x1.bn.num_batches_tracked', 'stage3.12.rbr_identity.weight', 'stage3.12.rbr_identity.bias', 'stage3.12.rbr_identity.running_mean', 'stage3.12.rbr_identity.running_var', 'stage3.12.rbr_identity.num_batches_tracked', 'stage3.12.rbr_1x1.bn.weight', 'stage3.12.rbr_1x1.bn.bias', 'stage3.12.rbr_1x1.bn.running_mean', 'stage3.12.rbr_1x1.bn.running_var', 'stage3.12.rbr_1x1.bn.num_batches_tracked', 'stage3.13.rbr_identity.weight', 'stage3.13.rbr_identity.bias', 'stage3.13.rbr_identity.running_mean', 'stage3.13.rbr_identity.running_var', 'stage3.13.rbr_identity.num_batches_tracked', 'stage3.13.rbr_1x1.bn.weight', 'stage3.13.rbr_1x1.bn.bias', 'stage3.13.rbr_1x1.bn.running_mean', 'stage3.13.rbr_1x1.bn.running_var', 'stage3.13.rbr_1x1.bn.num_batches_tracked', 'stage4.0.rbr_1x1.bn.weight', 'stage4.0.rbr_1x1.bn.bias', 'stage4.0.rbr_1x1.bn.running_mean', 'stage4.0.rbr_1x1.bn.running_var', 'stage4.0.rbr_1x1.bn.num_batches_tracked'])
/opt/conda/lib/python3.8/site-packages/torchvision/transforms/transforms.py:329: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  warnings.warn(
Traceback (most recent call last):
  File "main.py", line 424, in <module>
    main(config)
  File "main.py", line 152, in main
    max_accuracy = load_checkpoint(config, model_without_ddp, optimizer, lr_scheduler, logger, model_ema=model_ema)
  File "/workspace/CSR/QARepVGG/QARepVGG_try/utils.py", line 133, in load_checkpoint
    optimizer.load_state_dict(checkpoint['optimizer'])
  File "/opt/conda/lib/python3.8/site-packages/torch/optim/optimizer.py", line 172, in load_state_dict
    raise ValueError("loaded state dict contains a parameter group "
ValueError: loaded state dict contains a parameter group that doesn't match the size of optimizer's group